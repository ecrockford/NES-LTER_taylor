function [Cruise,LTERStation,Cast,Niskin,Replicate,FilterSize,Chlugl,Phaeougl,LabnotebookandPagenumber,quality_flag,Comments,Comments2] = fxn_importNESLTER_column_vectors(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   [Cruise,LTERStation,Cast,Niskin,Replicate,FilterSize,Chlugl,Phaeougl,LabnotebookandPagenumber,quality_flag,Comments,Comments2]
%   = IMPORTFILE(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as column
%   vectors.
%
%   [Cruise,LTERStation,Cast,Niskin,Replicate,FilterSize,Chlugl,Phaeougl,LabnotebookandPagenumber,quality_flag,Comments,Comments2]
%   = IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   [Cruise,LTERStation,Cast,Niskin,Replicate,FilterSize,Chlugl,Phaeougl,LabnotebookandPagenumber,quality_flag,Comments,Comments2]
%   = IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Non-numeric cells are replaced with: NaN
%
% Example:
%   [Cruise,LTERStation,Cast,Niskin,Replicate,FilterSize,Chlugl,Phaeougl,LabnotebookandPagenumber,quality_flag,Comments,Comments2] = importfile('NESLTERchl.xlsx','chl',2,2388);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2019/06/19 12:21:44

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 2388;
end

%% Import the data
[~, ~, raw1] = xlsread(workbookFile, sheetName, sprintf('A%d:A%d',startRow(1),endRow(1)));
[~, ~, raw2] = xlsread(workbookFile, sheetName, sprintf('C%d:E%d',startRow(1),endRow(1)));
[~, ~, raw3] = xlsread(workbookFile, sheetName, sprintf('H%d:H%d',startRow(1),endRow(1)));
[~, ~, raw4] = xlsread(workbookFile, sheetName, sprintf('J%d:J%d',startRow(1),endRow(1)));
[~, ~, raw5] = xlsread(workbookFile, sheetName, sprintf('W%d:X%d',startRow(1),endRow(1)));
[~, ~, raw6] = xlsread(workbookFile, sheetName, sprintf('Z%d:Z%d',startRow(1),endRow(1)));
[~, ~, raw7] = xlsread(workbookFile, sheetName, sprintf('AE%d:AG%d',startRow(1),endRow(1)));
raw = [raw1,raw2,raw3,raw4,raw5,raw6,raw7];
for block=2:length(startRow)
    [~, ~, tmpRawBlock1] = xlsread(workbookFile, sheetName, sprintf('A%d:A%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock2] = xlsread(workbookFile, sheetName, sprintf('C%d:E%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock3] = xlsread(workbookFile, sheetName, sprintf('H%d:H%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock4] = xlsread(workbookFile, sheetName, sprintf('J%d:J%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock5] = xlsread(workbookFile, sheetName, sprintf('W%d:X%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock6] = xlsread(workbookFile, sheetName, sprintf('Z%d:Z%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock7] = xlsread(workbookFile, sheetName, sprintf('AE%d:AG%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock1,tmpRawBlock2,tmpRawBlock3,tmpRawBlock4,tmpRawBlock5,tmpRawBlock6,tmpRawBlock7]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,[1,2,5,9,11,12]);
raw = raw(:,[3,4,6,7,8,10]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Cruise = cellVectors(:,1);
LTERStation = cellVectors(:,2);
Cast = data(:,1);
Niskin = data(:,2);
Replicate = cellVectors(:,3);
FilterSize = data(:,3);
Chlugl = data(:,4);
Phaeougl = data(:,5);
LabnotebookandPagenumber = cellVectors(:,4);
quality_flag = data(:,6);
Comments = cellVectors(:,5);
Comments2 = cellVectors(:,6);

